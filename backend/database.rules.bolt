path / {
	read() { false }
	write() { false }
}

path /games/{id} is Game {
}

type Game {
	type: GameType,
	challenger: Attendee,
	acceptor: Attendee | Null
	creationTime: CurrentTimestamp
	create() { true }
	read() { this.acceptor.hand != null }
}

type GameType extends Number {
	validate() { this == 0 || this == 1 }
	read() { true }
	create() { true }
}

type Attendee {
	create() { true }

	name: PublicString
	hand: Hand
}

type PublicString extends String {
	read() { true }
	create() { true }
}

type Hand extends Number {
	validate() {
		this == 0 || this == 1 || this == 2 || (this.parent().parent().type == 1 && (this == 3 || this == 4))
	}
	create() { true }
}

type CurrentTimestamp extends Number {
  validate() { this == now }
}
