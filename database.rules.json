{
  "rules": {
    "games": {
      "$id": {
        ".validate": "newData.hasChildren(['type', 'challenger'])",
        "type": {
          ".validate": "newData.isNumber() && (newData.val() == 0 || newData.val() == 1)",
          ".write": "data.val() == null",
          ".read": "true"
        },
        "challenger": {
          ".validate": "newData.hasChildren(['name', 'hand'])",
          "name": {
            ".validate": "newData.isString()",
            ".write": "data.val() == null",
            ".read": "true"
          },
          "hand": {
            ".validate": "newData.isNumber() && (newData.val() == 0 || newData.val() == 1 || newData.val() == 2 || newData.parent().parent().child('type').val() == 1 && (newData.val() == 3 || newData.val() == 4))",
            ".write": "data.val() == null"
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "data.val() == null"
        },
        "acceptor": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['name', 'hand'])",
          "name": {
            ".validate": "newData.isString()",
            ".write": "data.val() == null",
            ".read": "true"
          },
          "hand": {
            ".validate": "newData.isNumber() && (newData.val() == 0 || newData.val() == 1 || newData.val() == 2 || newData.parent().parent().child('type').val() == 1 && (newData.val() == 3 || newData.val() == 4))",
            ".write": "data.val() == null"
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "data.val() == null"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null",
        ".read": "data.child('acceptor').child('hand').val() != null"
      }
    }
  }
}
